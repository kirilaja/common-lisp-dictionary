;(DEFUN HAMLET? (X) (OR T (NOT T)))

;LISPs will tend to not let you redefine T or NIL, but you might need 
;them if you were embedding a LISP, such as in your brain perhaps. 
;In the cases of the definitions of t and nil below, a should be 
;T or true and b should be NIL or false. Note that lambda(s) are 
;okay since it's the REPL handles them. The two below are commented 
;out as the other definitions further down do not use the dotted forms 
;for truth and falsity. They are merely included for completeness.
;It might be more proper to set them to themselves as atomic symbols.
 
;(set 't. ((lambda (a b) a) 'T 'NIL))
;(set 'nil. ((lambda (a b) b) 'T 'NIL))

;The above and the below are derived from their lambda calculus forms, 
;which of course you can name.

(defun and. (a b) (if a b (if t nil)))
(defun or. (a b) (if a t (if t b)))
(defun not. (b) (if b nil (if t t)))
